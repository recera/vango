// Code generated by vango; DO NOT EDIT.

package functional

import (
	"github.com/recera/vango/pkg/vango/vdom"
)

// Embedded elements

// Iframe creates a <iframe> element
func Iframe(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("iframe", props, children...)
}

// Embed creates a <embed> element (void/self-closing)
func Embed(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("embed", props)
}

// Object creates a <object> element
func Object(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("object", props, children...)
}

// Forms elements

// Form creates a <form> element
func Form(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("form", props, children...)
}

// Input creates a <input> element (void/self-closing)
func Input(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("input", props)
}

// Textarea creates a <textarea> element
func Textarea(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("textarea", props, children...)
}

// Select creates a <select> element
func Select(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("select", props, children...)
}

// Option creates a <option> element
func Option(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("option", props, children...)
}

// Optgroup creates a <optgroup> element
func Optgroup(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("optgroup", props, children...)
}

// Button creates a <button> element
func Button(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("button", props, children...)
}

// Label creates a <label> element
func Label(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("label", props, children...)
}

// Fieldset creates a <fieldset> element
func Fieldset(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("fieldset", props, children...)
}

// Legend creates a <legend> element
func Legend(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("legend", props, children...)
}

// Datalist creates a <datalist> element
func Datalist(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("datalist", props, children...)
}

// Output creates a <output> element
func Output(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("output", props, children...)
}

// Graphics elements

// Canvas creates a <canvas> element
func Canvas(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("canvas", props, children...)
}

// Svg creates a <svg> element
func Svg(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("svg", props, children...)
}

// Inline_text elements

// A creates a <a> element
func A(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("a", props, children...)
}

// Span creates a <span> element
func Span(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("span", props, children...)
}

// Strong creates a <strong> element
func Strong(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("strong", props, children...)
}

// Em creates a <em> element
func Em(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("em", props, children...)
}

// B creates a <b> element
func B(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("b", props, children...)
}

// I creates a <i> element
func I(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("i", props, children...)
}

// U creates a <u> element
func U(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("u", props, children...)
}

// S creates a <s> element
func S(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("s", props, children...)
}

// Mark creates a <mark> element
func Mark(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("mark", props, children...)
}

// Small creates a <small> element
func Small(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("small", props, children...)
}

// Del creates a <del> element
func Del(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("del", props, children...)
}

// Ins creates a <ins> element
func Ins(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("ins", props, children...)
}

// Sub creates a <sub> element
func Sub(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("sub", props, children...)
}

// Sup creates a <sup> element
func Sup(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("sup", props, children...)
}

// Code creates a <code> element
func Code(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("code", props, children...)
}

// Kbd creates a <kbd> element
func Kbd(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("kbd", props, children...)
}

// Samp creates a <samp> element
func Samp(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("samp", props, children...)
}

// Var creates a <var> element
func Var(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("var", props, children...)
}

// Time creates a <time> element
func Time(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("time", props, children...)
}

// Br creates a <br> element (void/self-closing)
func Br(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("br", props)
}

// Wbr creates a <wbr> element (void/self-closing)
func Wbr(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("wbr", props)
}

// Interactive elements

// Details creates a <details> element
func Details(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("details", props, children...)
}

// Summary creates a <summary> element
func Summary(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("summary", props, children...)
}

// Dialog creates a <dialog> element
func Dialog(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("dialog", props, children...)
}

// Media elements

// Img creates a <img> element (void/self-closing)
func Img(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("img", props)
}

// Picture creates a <picture> element
func Picture(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("picture", props, children...)
}

// Source creates a <source> element (void/self-closing)
func Source(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("source", props)
}

// Video creates a <video> element
func Video(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("video", props, children...)
}

// Audio creates a <audio> element
func Audio(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("audio", props, children...)
}

// Track creates a <track> element (void/self-closing)
func Track(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("track", props)
}

// Metadata elements

// Html creates a <html> element
func Html(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("html", props, children...)
}

// Head creates a <head> element
func Head(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("head", props, children...)
}

// Title creates a <title> element
func Title(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("title", props, children...)
}

// Meta creates a <meta> element (void/self-closing)
func Meta(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("meta", props)
}

// Link creates a <link> element (void/self-closing)
func Link(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("link", props)
}

// Style creates a <style> element
func Style(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("style", props, children...)
}

// Script creates a <script> element
func Script(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("script", props, children...)
}

// Sectioning elements

// Body creates a <body> element
func Body(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("body", props, children...)
}

// Article creates a <article> element
func Article(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("article", props, children...)
}

// Section creates a <section> element
func Section(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("section", props, children...)
}

// Nav creates a <nav> element
func Nav(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("nav", props, children...)
}

// Aside creates a <aside> element
func Aside(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("aside", props, children...)
}

// Header creates a <header> element
func Header(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("header", props, children...)
}

// Footer creates a <footer> element
func Footer(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("footer", props, children...)
}

// Main creates a <main> element
func Main(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("main", props, children...)
}

// Svg_elements elements

// Path creates a <path> element
func Path(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("path", props, children...)
}

// Circle creates a <circle> element
func Circle(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("circle", props, children...)
}

// Rect creates a <rect> element
func Rect(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("rect", props, children...)
}

// Line creates a <line> element
func Line(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("line", props, children...)
}

// Polygon creates a <polygon> element
func Polygon(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("polygon", props, children...)
}

// Polyline creates a <polyline> element
func Polyline(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("polyline", props, children...)
}

// Ellipse creates a <ellipse> element
func Ellipse(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("ellipse", props, children...)
}

// G creates a <g> element
func G(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("g", props, children...)
}

// Defs creates a <defs> element
func Defs(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("defs", props, children...)
}

// Symbol creates a <symbol> element
func Symbol(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("symbol", props, children...)
}

// Use creates a <use> element
func Use(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("use", props, children...)
}

// Svgtext creates a <svgtext> element
func Svgtext(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("svgtext", props, children...)
}

// Tspan creates a <tspan> element
func Tspan(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("tspan", props, children...)
}

// LinearGradient creates a <linearGradient> element
func LinearGradient(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("linearGradient", props, children...)
}

// RadialGradient creates a <radialGradient> element
func RadialGradient(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("radialGradient", props, children...)
}

// Stop creates a <stop> element
func Stop(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("stop", props, children...)
}

// Pattern creates a <pattern> element
func Pattern(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("pattern", props, children...)
}

// Mask creates a <mask> element
func Mask(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("mask", props, children...)
}

// ClipPath creates a <clipPath> element
func ClipPath(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("clipPath", props, children...)
}

// Filter creates a <filter> element
func Filter(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("filter", props, children...)
}

// Animate creates a <animate> element
func Animate(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("animate", props, children...)
}

// AnimateTransform creates a <animateTransform> element
func AnimateTransform(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("animateTransform", props, children...)
}

// Image creates a <image> element
func Image(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("image", props, children...)
}

// ForeignObject creates a <foreignObject> element
func ForeignObject(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("foreignObject", props, children...)
}

// Switch creates a <switch> element
func Switch(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("switch", props, children...)
}

// Svgtitle creates a <svgtitle> element
func Svgtitle(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("svgtitle", props, children...)
}

// Desc creates a <desc> element
func Desc(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("desc", props, children...)
}

// Metadata creates a <metadata> element
func Metadata(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("metadata", props, children...)
}

// Tables elements

// Table creates a <table> element
func Table(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("table", props, children...)
}

// Caption creates a <caption> element
func Caption(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("caption", props, children...)
}

// Thead creates a <thead> element
func Thead(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("thead", props, children...)
}

// Tbody creates a <tbody> element
func Tbody(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("tbody", props, children...)
}

// Tfoot creates a <tfoot> element
func Tfoot(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("tfoot", props, children...)
}

// Tr creates a <tr> element
func Tr(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("tr", props, children...)
}

// Td creates a <td> element
func Td(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("td", props, children...)
}

// Th creates a <th> element
func Th(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("th", props, children...)
}

// Text_content elements

// Div creates a <div> element
func Div(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("div", props, children...)
}

// P creates a <p> element
func P(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("p", props, children...)
}

// H1 creates a <h1> element
func H1(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("h1", props, children...)
}

// H2 creates a <h2> element
func H2(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("h2", props, children...)
}

// H3 creates a <h3> element
func H3(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("h3", props, children...)
}

// H4 creates a <h4> element
func H4(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("h4", props, children...)
}

// H5 creates a <h5> element
func H5(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("h5", props, children...)
}

// H6 creates a <h6> element
func H6(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("h6", props, children...)
}

// Ul creates a <ul> element
func Ul(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("ul", props, children...)
}

// Ol creates a <ol> element
func Ol(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("ol", props, children...)
}

// Li creates a <li> element
func Li(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("li", props, children...)
}

// Dl creates a <dl> element
func Dl(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("dl", props, children...)
}

// Dt creates a <dt> element
func Dt(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("dt", props, children...)
}

// Dd creates a <dd> element
func Dd(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("dd", props, children...)
}

// Blockquote creates a <blockquote> element
func Blockquote(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("blockquote", props, children...)
}

// Pre creates a <pre> element
func Pre(props vdom.Props, children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewElement("pre", props, children...)
}

// Hr creates a <hr> element (void/self-closing)
func Hr(props vdom.Props) *vdom.VNode {
	return vdom.NewElement("hr", props)
}

// Text creates a text node
func Text(text string) *vdom.VNode {
	return vdom.NewText(text)
}

// Fragment creates a fragment node
func Fragment(children ...*vdom.VNode) *vdom.VNode {
	return vdom.NewFragment(children...)
}
